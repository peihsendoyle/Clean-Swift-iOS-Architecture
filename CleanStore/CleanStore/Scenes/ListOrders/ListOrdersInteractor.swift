//
//  ListOrdersInteractor.swift
//  CleanStore
//
//  Created by Hiep Nguyen on 3/1/16.
//  Copyright (c) 2016 Zyncas. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ListOrdersInteractorInput
{
    //  func doSomething(request: ListOrdersRequest)
    
    func fetchOrders(request: ListOrders_FetchOrders_Request)
}

protocol ListOrdersInteractorOutput
{
//    func presentSomething(response: ListOrdersResponse)
    
    func presentFetchedOrders(response: ListOrders_FetchOrders_Response)
}

class ListOrdersInteractor: ListOrdersInteractorInput
{
    var output: ListOrdersInteractorOutput!
//    var worker: ListOrdersWorker!
    
    var ordersWorker = OrdersWorker()
    
    // MARK: Business logic
    
    
    
//    func doSomething(request: ListOrdersRequest)
//    {
//        // NOTE: Create some Worker to do the work
//        
////        worker = ListOrdersWorker()
////        worker.doSomeWork()
//        
//        // NOTE: Pass the result to the Presenter
//        
////        let response = ListOrdersResponse()
////        output.presentSomething(response)
//    }
    
    func fetchOrders(request: ListOrders_FetchOrders_Request) {
        
        ordersWorker.fetchOrders { (orders) -> Void in
            
            let response = ListOrders_FetchOrders_Response(orders: orders)
            
            self.output.presentFetchedOrders(response)
        }
    }
}
