//
//  CreateOrderPresenterTests.swift
//  CleanStore
//
//  Created by Hiep Nguyen on 3/3/16.
//  Copyright (c) 2016 Zyncas. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import CleanStore
import XCTest

class CreateOrderPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: CreateOrderPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupCreateOrderPresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupCreateOrderPresenter()
    {
        sut = CreateOrderPresenter()
    }
    
    // MARK: Test doubles
    
    class CreateOrderPresenterOutputSpy: CreateOrderPresenterOutput {
        
        // MARK: Method call expectations
        
        var displayExpirationDateCalled = false
        
        // MARK: Argument expectations
        
        var createOrder_formatExpirationDate_viewModel : CreateOrder_FormatExpirationDate_ViewModel!
        
        //MARK: Spied methods
        
        func displayExpirationDate(viewModel: CreateOrder_FormatExpirationDate_ViewModel) {
            
            displayExpirationDateCalled = true
            
            createOrder_formatExpirationDate_viewModel = viewModel
        }
    }
    
    // MARK: Tests
    
    func testPresentExpirationDateShouldConvertDateToString() {
        
        // Given
        
        let createOrderPresenterOutputSpy = CreateOrderPresenterOutputSpy()
        
        sut.output = createOrderPresenterOutputSpy
        
        // When
        
        let dateComponents = NSDateComponents()
        
        dateComponents.year = 16
        
        dateComponents.month = 3
        
        dateComponents.day = 3
        
        let date = NSCalendar.currentCalendar().dateFromComponents(dateComponents)!
        
        let response = CreateOrder_FormatExpirationDate_Response(date: date)
        
        sut.presentExpirationDate(response)
        
        // Then
        
        let returnedDate = createOrderPresenterOutputSpy.createOrder_formatExpirationDate_viewModel.date
        
        let expectedDate = "3/3/16"
        
        XCTAssertEqual(returnedDate, expectedDate, "Presenting an expiration date should convert date to string")
    }
    
    func testPresentExpirationDateShouldAskViewControllerToDisplayDateString() {
        
        // Given
        
        let createOrderPresenterOutputSpy = CreateOrderPresenterOutputSpy()
        
        sut.output = createOrderPresenterOutputSpy
        
        // When
        
        let response = CreateOrder_FormatExpirationDate_Response(date: NSDate())
        
        sut.presentExpirationDate(response)
        
        // Then
        
        XCTAssert(createOrderPresenterOutputSpy.displayExpirationDateCalled, "Presenting an expiration date should ask view controller to display date string")
    }
    
    func testSomething()
    {
        // Given
        
        // When
        
        // Then
    }
}
